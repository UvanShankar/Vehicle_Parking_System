# -*- coding: utf-8 -*-
"""Number Plate.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nc1_vDduiGM_jTjw4PgeSZo94wKQFbdR
"""

#!sudo apt install tesseract-ocr
#!pip install pytesseract
#!git clone https://github.com/UvanShankar/Vehicle-parking-system.git

# Commented out IPython magic to ensure Python compatibility.
# %cd Vehicle-parking-system



# Commented out IPython magic to ensure Python compatibility.
import cv2
import random
import os
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline



images_dir = "data/images"
image_files = os.listdir(images_dir)

image_path = "{}/{}".format(images_dir, "car_2.jpg")

image = cv2.imread(image_path)
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

def plot_images(img1, img2, title1="", title2=""):
    fig = plt.figure(figsize=[15,15])
    ax1 = fig.add_subplot(121)
    ax1.imshow(img1, cmap="gray")
    ax1.set(xticks=[], yticks=[], title=title1)

    ax2 = fig.add_subplot(122)
    ax2.imshow(img2, cmap="gray")
    ax2.set(xticks=[], yticks=[], title=title2)

plot_images(image, gray)

blur = cv2.bilateralFilter(gray, 11,90, 90)

plot_images(gray, blur)

edges = cv2.Canny(blur, 30, 200)

plot_images(blur, edges)

cnts, new = cv2.findContours(edges.copy(), cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)

image_copy = image.copy()

_ = cv2.drawContours(image_copy, cnts, -1, (255,0,255),2)

plot_images(image, image_copy)

cnts = sorted(cnts, key=cv2.contourArea, reverse=True)[:30]

image_copy = image.copy()
_ = cv2.drawContours(image_copy, cnts, -1, (255,0,255),2)

plot_images(image, image_copy)

plate = None
for c in cnts:
    perimeter = cv2.arcLength(c, True)
    edges_count = cv2.approxPolyDP(c, 0.02 * perimeter, True)
    if len(edges_count) == 4:
        x,y,w,h = cv2.boundingRect(c)
        plate = image[y:y+h, x:x+w]
        break

cv2.imwrite("plate.png", plate)

plot_images(plate, plate)

import pytesseract
text = pytesseract.image_to_string(plate, lang="eng")



print(text)





"""create db for 1st time"""

import sqlite3
conn = sqlite3.connect('example.db')

conn.execute('''CREATE TABLE numberplate
                (num text, key text)''')

conn.commit()

Insert values vehicles entering

conn.execute("INSERT INTO numberplate VALUES('"+text+"', 'John')")

conn.execute("INSERT INTO numberplate VALUES('1', 'John')")

"""To check to exit of vehicle"""

rows =conn.execute('SELECT * FROM numberplate where num="'+text+'"')
#rows = conn.fetchall()
count=0
for row in rows:
  print(row)
  count=count+1
if count==1:
  if row[1]=="John":
    print(conn.execute('DELETE FROM numberplate WHERE num="'+text+'"').rowcount)
    print("gooooo")
  else:
    print("Wrong key")



import cv2
cap = cv2.VideoCapture(filename)
# cap = cv2.VideoCapture(0)
count = 0
while cap.isOpened():
    ret,frame = cap.read()
    if ret == True:
        cv2.imshow('window-name',frame)
        cv2.imwrite("./output/frame%d.jpg" % count, frame)
        count = count + 1
        if cv2.waitKey(10) & 0xFF == ord('q'):
            break
    else:
        break
cap.release()
cv2.destroyAllWindows()
